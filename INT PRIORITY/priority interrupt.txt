//program for ext interrupt.
#include "lpc17xx.h"
//#include "type.h"
#include "extint.h"
#include "core_cm3.h"
volatile uint32_t count;
volatile uint32_t flag=0;

int main(void)
{
        
		EINTInit();
		while(1);
}


void EINT3_IRQHandler (void) 				//what action will occur on interrupt
{
	NVIC_Type->ICER[0] |=(1<<21);			//clearing the intrpt.
	LPC_GPIOINT->IO0IntClr |=(1<<20);		//clear the gpio intrupt.
	//LPC_SC->EXTINT = EINT3;			// clear/reset interrupt ent3

	LPC_GPIO1->FIODIR |=1<<29;	//setting dir as output.
					
	LPC_GPIO1->FIOSET |= (1<<29);		// turn off P1.29
	delay(); 	
	LPC_GPIO1->FIOCLR |= (1<<29);		// turn on P1.29 
	delay();	

}
void EINT0_IRQHandler (void) 		//what action will occur on interrupt
{
	LPC_SC->EXTINT = EINT0;		//reset

	LPC_GPIO2->FIODIR |=1<<27;	//setting dir as output.

	LPC_GPIO1->FIOSET |= (1<<27);	//set p1.27 
	delay();
	LPC_GPIO1->FIOCLR |= (1<<27);   //clear p1.27   
	delay();
}
uint32_t EINTInit(void)			//initializing the interrupt
{
				

	LPC_PINCON->PINSEL4 |= (0x01<<20);		//selecting pin functioniality as ent0.

	LPC_GPIO2->PINMODE4 |= (1<<21);			//selecting pinmode for p2.10
	LPC_SC->EXTMODE = EINT0_EDGE;			// INT0 edge trigger 
	LPC_SC->EXTPOLAR = 0;				// INT0 is falling edge by default
	NVIC_EnableIRQ(EINT0_IRQn);			//enabling intrpt ent0.
	
				
	LPC_GPIOINT->IO0IntEnF |= (1<<20);		//Enable GPIO interrupts in IO0/2IntEnR. on pin p0.20
	LPC_SC->EXTMODE = EINT0_EDGE;			// INT0 edge trigger 
	LPC_SC->EXTPOLAR = 0;				// INT0 is falling edge by default
	NVIC_Type->ISER[0]  |=(1<<21);			//Interrupts  enabled in Interrupt Set Enable 0 register.
	//NVIC_EnableIRQ(EINT3_IRQn);			//enabling the interrupt ent3.
	

	void NVIC_SetPriority(EINT0_IRQn, 10);		//passing eint0 with priority
	void NVIC_SetPriority(EINT3_IRQn, 13);		//passing eint3 with priority

	return( 1 );
	
}
void delay(void)
{
	uint8_t j;
	for(j=0;j<8000000;j++);
}

